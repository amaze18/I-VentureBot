{"docstore/data": {"3b35e093-7506-4831-9d88-049ca4e712a9": {"__data__": {"id_": "3b35e093-7506-4831-9d88-049ca4e712a9", "embedding": null, "metadata": {"page_label": "2", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java", "Java Programming language", "Java Online", "Windows", "Sun Microsystems", "Mac OS"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62f2e1b2-eaf9-4d34-b928-d3b3e39eb4f3", "node_type": "4", "metadata": {"page_label": "2", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "b0a2f3a210e4418d50be2feac582830d7f479ec8bbea7acf19f423638de2d040", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3971c3e3-7bc8-4348-b387-97ab15c6a8b1", "node_type": "1", "metadata": {}, "hash": "7d4d23881b632ed02592f07021de86637d2d7ac8735cc4056d83e94f67848e80", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \ni \n \nAbout the T utorial  \nJava is a high -level programming language originally developed by Sun Microsystems and \nreleased in 1995. Java runs on a variety of platforms, such as Windows, Mac OS, and the \nvarious versions of UNIX. This tutorial gives a complete understanding of Java.  \nThis reference will take you through simple and practical approach es while learning Java \nProgramming language.  \nAudience  \nThis tutorial has been prepared for the beginners to help them understand the basic to \nadvanced concepts related to Java Programming language.  \nPrerequisites  \nBefore you start practicing various types of examples given in this reference, we assume \nthat you are already aware about computer program s and computer programming \nlanguage s. \nExecute Java Online  \nFor most of the examples given in this tutorial , you will find a \u2018Try it \u2019 option, which you \ncan use  to execute your Java programs at the spot and enjoy your learning.  \nTry following the example using the \u2018Try it \u2019 option available at the top right corner of the \nfollowing sample code box \u2212  \npublic class MyFirstJavaProgram  { \n \n    public static void main(String []args) { \n       System.out.println(\"Hello World\" ); \n    } \n}", "start_char_idx": 0, "end_char_idx": 1220, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3971c3e3-7bc8-4348-b387-97ab15c6a8b1": {"__data__": {"id_": "3971c3e3-7bc8-4348-b387-97ab15c6a8b1", "embedding": null, "metadata": {"page_label": "3", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "58f6dcce-60e3-4de1-b5fd-59df24dce01f", "node_type": "4", "metadata": {"page_label": "3", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "1d586d2ee74540362f01438da1005266956ab69ea70c9088a0b54ab1f8be0397", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b35e093-7506-4831-9d88-049ca4e712a9", "node_type": "1", "metadata": {"page_label": "2", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "7454207f873e365a61a19a7f3617a51c874865291211e3db13c9d5c2c23c6a73", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5e31b476-e0da-4565-98e5-8dc5bb3eef78", "node_type": "1", "metadata": {}, "hash": "74ae322a53e799982a96a77fd80b389e0866286bbd434b50296438bcfef29116", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \nii \n \nT able of Contents  \nAbout the Tutorial  ................................ ................................ ................................ ................................ ............  i \nAudience  ................................ ................................ ................................ ................................ ...........................  i \nPrerequisites  ................................ ................................ ................................ ................................ .....................  i \nExecute Java Onl ine ................................ ................................ ................................ ................................ ..........  i \nTable of Contents  ................................ ................................ ................................ ................................ ............  ii \nJAVA \u2013 BASICS  ................................ ................................ ................................ .............................  1 \n1. Java \u2013 Overview  ................................ ................................ ................................ ................................ ........  2 \nHistory of Java  ................................ ................................ ................................ ................................ .................  3 \nTools You Will Need  ................................ ................................ ................................ ................................ .........  3 \nTry It Option  ................................ ................................ ................................ ................................ ....................  4 \nWhat is Next?  ................................ ................................ ................................ ................................ ..................  4 \n2. Java - Environment Setup  ................................ ................................ ................................ .........................  5 \nTry it Option Online  ................................ ................................ ................................ ................................ .........  5 \nLocal En vironment Setup  ................................ ................................ ................................ ................................ . 5 \nPopular Java Editors  ................................ ................................ ................................ ................................ ........  6 \nWhat is Next?  ................................ ................................ ................................ ................................ ..................  6 \n3. Java \u2013 Basic Syntax  ................................ ................................ ................................ ................................ .... 7 \nFirst Java Program  ................................ ................................ ................................ ................................ ...........  7 \nBasic Synt ax ................................ ................................ ................................ ................................ .....................  8 \nJava Identifiers  ................................ ................................ ................................ ................................ .................  9 \nJava Modifiers ................................ ................................ ................................ ................................ ..................  9 \nJava Variables  ................................ ................................ ................................ ................................ ..................  9 \nJava Arrays  ................................ ................................ ................................ ................................ .......................  9 \nJava Enums  ................................ ................................ ................................ ................................ ....................  10 \nJava Keywords  ................................ ................................ ................................ ................................ ...............  10 \nComments in Java  ................................ ................................ ................................ ................................ ..........  11 \nUsing Blank Lines  ................................ ................................ ................................ ................................ ...........  12 \nInheritance  ................................ ................................ ................................ ................................ ....................  12 \nInterfaces  ................................ ................................ ................................ ................................ .......................  12 \nWhat is Next?  ................................ ................................ ................................ ................................ ................  12 \n4. Java \u2013 Obje cts & Classes ................................ ................................ ................................ ..........................  13 \nObjects in Java  ................................ ................................ ................................ ................................ ...............  13 \nClasses in Java  ................................ ................................ ................................ ................................ ................  14 \nConstructors  ................................ ................................ ................................ ................................ ..................  14 \nHow to Use Singleton Class?  ................................ ................................ ................................ .........................  15 \nCreating an Object  ................................ ................................ ................................ ................................ .........  17 \nAccessing Instance Variables and Methods  ................................ ................................ ................................ ... 18 \nSource File Declaration Rules  ................................ ................................ ................................ ........................  20 \nJava Package  ................................ ................................ ................................ ................................ ..................  20 \nImport Statements  ................................ ................................ ................................ ................................ ........  21 \nA Simple Case Study  ................................ ................................ ................................ ................................ ...... 21 \nWhat is Next?  ................................ ................................ ................................ ................................ ................  23", "start_char_idx": 0, "end_char_idx": 7054, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5e31b476-e0da-4565-98e5-8dc5bb3eef78": {"__data__": {"id_": "5e31b476-e0da-4565-98e5-8dc5bb3eef78", "embedding": null, "metadata": {"page_label": "4", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d561d29f-c79d-43f9-b3c2-0166c281ba16", "node_type": "4", "metadata": {"page_label": "4", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "54c3a453e01956d3c976c95a60f32db09c5239967183be9d118a42307c4c0109", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3971c3e3-7bc8-4348-b387-97ab15c6a8b1", "node_type": "1", "metadata": {"page_label": "3", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "a4d741689bad1e5af82540e57dc9874cf78de616462dda3c7072aed3fcd4f4d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe50c00d-fead-442d-93ca-74fef0a5154e", "node_type": "1", "metadata": {}, "hash": "a46084d6c9962e42441e92c6a405d141e12146a084ae717506929d5ab649887b", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \niii \n \n5. Java \u2013 Basic Datatypes  ................................ ................................ ................................ ............................  24 \nPrimitive Datatypes  ................................ ................................ ................................ ................................ .......  24 \nReference Datatypes  ................................ ................................ ................................ ................................ ..... 26 \nJava Literals  ................................ ................................ ................................ ................................ ...................  26 \nWhat is Next?  ................................ ................................ ................................ ................................ ................  28 \n6. Java \u2013 Variable Types  ................................ ................................ ................................ ..............................  29 \nLocal Variables  ................................ ................................ ................................ ................................ ...............  29 \nInstance Variables  ................................ ................................ ................................ ................................ .........  31 \nClass/static Variables  ................................ ................................ ................................ ................................ ..... 33 \nWhat is Next?  ................................ ................................ ................................ ................................ ................  34 \n7. Java \u2013 Modifier Types  ................................ ................................ ................................ .............................  35 \nJava Access Modifiers  ................................ ................................ ................................ ................................ .... 35 \nJava N on-Access Modifiers  ................................ ................................ ................................ ............................  38 \nThe Static Modifier  ................................ ................................ ................................ ................................ ........  38 \nThe Final Modifier  ................................ ................................ ................................ ................................ .........  39 \nThe Abstract Modifier ................................ ................................ ................................ ................................ .... 41 \nAccess  Control Modifiers  ................................ ................................ ................................ ...............................  43 \nNon -Access Modifiers  ................................ ................................ ................................ ................................ .... 44 \nWhat is Next?  ................................ ................................ ................................ ................................ ................  44 \n8. Java \u2013 Basic Operators  ................................ ................................ ................................ ............................  45 \nThe Arithmetic Operators  ................................ ................................ ................................ ..............................  45 \nThe Relational Operators ................................ ................................ ................................ ...............................  47 \nThe Bitwise Operators  ................................ ................................ ................................ ................................ ... 49 \nThe Logical Operators  ................................ ................................ ................................ ................................ .... 52 \nThe As signment Operators  ................................ ................................ ................................ ............................  53 \nMiscellaneous Operators  ................................ ................................ ................................ ...............................  57 \nPrecedence of Java Operators  ................................ ................................ ................................ .......................  59 \nWhat is Next?  ................................ ................................ ................................ ................................ ................  59 \n9. Java \u2013 Loop  Control  ................................ ................................ ................................ ................................ . 60 \nWhile Loop in Java  ................................ ................................ ................................ ................................ .........  61 \nfor Loop in Java  ................................ ................................ ................................ ................................ ..............  62 \nDo While Loop in Java  ................................ ................................ ................................ ................................ ... 65 \nLoop Control Statements  ................................ ................................ ................................ ...............................  67 \nBreak Statement in Java  ................................ ................................ ................................ ................................  67 \nContinue Statement in Java  ................................ ................................ ................................ ...........................  69 \nEnhanced for loop in Java  ................................ ................................ ................................ ..............................  70 \nWhat is Next?  ................................ ................................ ................................ ................................ ................  71 \n10. Java \u2013 Decision Making  ................................ ................................ ................................ ...........................  72 \nIf Statement in Java  ................................ ................................ ................................ ................................ .......  73 \nIf-else Statement in Java ................................ ................................ ................................ ................................  74 \nThe if...else if...else Statement  ................................ ................................ ................................ ......................  76 \nNested if Statement in Java  ................................ ................................ ................................ ...........................  77 \nSwitch Statement in Java  ................................ ................................ ................................ ...............................  78 \nThe ? : Operator:  ................................ ................................ ................................ ................................ ...........  80 \nWhat is Ne xt? ................................ ................................ ................................ ................................ ................  81", "start_char_idx": 0, "end_char_idx": 7400, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe50c00d-fead-442d-93ca-74fef0a5154e": {"__data__": {"id_": "fe50c00d-fead-442d-93ca-74fef0a5154e", "embedding": null, "metadata": {"page_label": "5", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "773a8995-f7dd-4d4a-b786-fd53792158fb", "node_type": "4", "metadata": {"page_label": "5", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "0f7655a60456b807c7a680d8830c384ea487044b280b1fecfde15c11ab5a24c9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e31b476-e0da-4565-98e5-8dc5bb3eef78", "node_type": "1", "metadata": {"page_label": "4", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "a6fa237bf61bbf210dc2755556310f504ba1cf7bf6482a7f6857ad32743a50fb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2cbb124b-d339-485e-9537-fc1f61a9ace0", "node_type": "1", "metadata": {}, "hash": "68c5cfe56c2d7c5125b21a3c1584bf5c3892635765fdfccfc75bee44c9f44a8a", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \niv \n \n11. Java \u2013 Numbers Class  ................................ ................................ ................................ ..............................  82 \nNumber Methods  ................................ ................................ ................................ ................................ ..........  83 \nJava XXXValue Method  ................................ ................................ ................................ ................................ .. 86 \nJava \u2013 compareTo() Method  ................................ ................................ ................................ ..........................  87 \nJava \u2013 equals() Method  ................................ ................................ ................................ ................................ . 88 \nJava \u2013 valueOf() Method  ................................ ................................ ................................ ...............................  89 \nJava \u2013 toString() Method  ................................ ................................ ................................ ...............................  91 \nJava  \u2013 parseInt() Method  ................................ ................................ ................................ ...............................  92 \nJava \u2013 abs() Method  ................................ ................................ ................................ ................................ ...... 93 \nJava \u2013 ceil() Method  ................................ ................................ ................................ ................................ ...... 94 \nJava \u2013 floor() Method  ................................ ................................ ................................ ................................ .... 95 \nJava \u2013 rint() Method  ................................ ................................ ................................ ................................ ...... 96 \nJava \u2013 round() Method  ................................ ................................ ................................ ................................ .. 97 \nJava \u2013 min() Method  ................................ ................................ ................................ ................................ ...... 98 \nJava \u2013 max() Method  ................................ ................................ ................................ ................................ ..... 99 \nJava \u2013 exp() Method  ................................ ................................ ................................ ................................ .... 100 \nJava \u2013 log() Method  ................................ ................................ ................................ ................................ ..... 101 \nJava \u2013 pow() Method  ................................ ................................ ................................ ................................ ... 102 \nJava \u2013 sqrt() Method  ................................ ................................ ................................ ................................ .... 103 \nJava \u2013 sin() Method  ................................ ................................ ................................ ................................ ..... 104 \nJava \u2013 cos() Method  ................................ ................................ ................................ ................................ ..... 105 \nJava \u2013 tan() Method  ................................ ................................ ................................ ................................ ..... 106 \nJava \u2013 asin() Method  ................................ ................................ ................................ ................................ ... 107 \nJava \u2013 acos() Method  ................................ ................................ ................................ ................................ ... 108 \nJava \u2013 atan() Method  ................................ ................................ ................................ ................................ ... 109 \nJava \u2013 atan2() Method  ................................ ................................ ................................ ................................ . 110 \nJava \u2013 toDegrees() Method  ................................ ................................ ................................ .........................  111 \nJava \u2013 toRadians() Method  ................................ ................................ ................................ ..........................  112 \nJava \u2013 random() Method  ................................ ................................ ................................ .............................  113 \nWhat is Next?  ................................ ................................ ................................ ................................ ..............  114 \n12. Java \u2013 Character Class  ................................ ................................ ................................ ...........................  115 \nEscape Sequences  ................................ ................................ ................................ ................................ ........  115 \nCharacter Methods  ................................ ................................ ................................ ................................ ...... 117 \nJava \u2013 isLetter() Method  ................................ ................................ ................................ ..............................  117 \nJava \u2013 isDigit() Method  ................................ ................................ ................................ ................................  118 \nJava \u2013 isWhitespace() Method  ................................ ................................ ................................ ....................  119 \nJava \u2013 isUpperCase() Method  ................................ ................................ ................................ ......................  120 \nJava \u2013 isLowerCase() Method  ................................ ................................ ................................ ......................  121 \nJava \u2013 toUpperCase() Method  ................................ ................................ ................................ .....................  122 \nJava \u2013 toLowerCase() Method  ................................ ................................ ................................ .....................  123 \nJava \u2013 toString() Method  ................................ ................................ ................................ .............................  124 \nWhat is Next?  ................................ ................................ ................................ ................................ ..............  125 \n13. Java \u2013 Strings Class  ................................ ................................ ................................ ................................  126 \nCreating Strings  ................................ ................................ ................................ ................................ ...........  126 \nJava \u2013 String Buffer & String Builder Classes  ................................ ................................ ...............................  126 \nStringBuffer Methods  ................................ ................................ ................................ ................................ .. 127 \nJava \u2013 String Buffer append() Method  ................................ ................................ ................................ ........  128 \nJava \u2013 String Buffer reverse() Method  ................................ ................................ ................................ .........  129", "start_char_idx": 0, "end_char_idx": 7767, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2cbb124b-d339-485e-9537-fc1f61a9ace0": {"__data__": {"id_": "2cbb124b-d339-485e-9537-fc1f61a9ace0", "embedding": null, "metadata": {"page_label": "6", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java v Java"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "43f1af2e-1a70-4b14-9289-4f08365d06e5", "node_type": "4", "metadata": {"page_label": "6", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "d65ae551c366715ad11d401b0e7ffb1f18cbebd362c7d602059291e05ba37b42", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe50c00d-fead-442d-93ca-74fef0a5154e", "node_type": "1", "metadata": {"page_label": "5", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "b9f4f3e2270b9cb383b48abe8a40255c871df0a402c21336cd4a87e4965b5f6e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d3bc76e9-6b41-40fd-9bad-db965005b041", "node_type": "1", "metadata": {}, "hash": "8bed188ba6de775d02474ab61dd4f79b937133bc4827fac0acc88558e038297d", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \nv \n \nJava \u2013 String Buffer delete() Method  ................................ ................................ ................................ ..........  130 \nJava \u2013 String Buffer insert() Method  ................................ ................................ ................................ ...........  131 \nJava \u2013 String Buffer replace() Method  ................................ ................................ ................................ .........  132 \nString Length ................................ ................................ ................................ ................................ ................  135 \nConcatenating Strings  ................................ ................................ ................................ ................................ .. 136 \nCreating Format Strings  ................................ ................................ ................................ ...............................  136 \nString Methods  ................................ ................................ ................................ ................................ ............  137 \nJava \u2013 String chartAt() Method  ................................ ................................ ................................ ....................  142 \nJava \u2013 String compareTo(Object o) Method  ................................ ................................ ................................  143 \nJava \u2013 String compareTo(String anotherString) Method  ................................ ................................ .............  144 \nJava \u2013 String compareToIgnoreCase() Method  ................................ ................................ ...........................  145 \nJava \u2013 String concat() Method  ................................ ................................ ................................ .....................  146 \nJava \u2013 String contentEquals() Method  ................................ ................................ ................................ .........  147 \nJava \u2013 String copyValueOf( char[] data ) Method  ................................ ................................ .........................  148 \nJava \u2013 String copyValueOf( char[] data, int offset, int count ) Method ................................ .........................  149 \nJava \u2013 String endsWith() M ethod  ................................ ................................ ................................ ................  150 \nJava \u2013 String equals() Method  ................................ ................................ ................................ .....................  151 \nJava \u2013 String equalsIgnoreCase() Method  ................................ ................................ ................................ ... 152 \nJava \u2013 String getBytes( String charsetName ) Method  ................................ ................................ ..................  154 \nJava \u2013 String getBytes() Method  ................................ ................................ ................................ ..................  155 \nJava \u2013 String getChars() Method  ................................ ................................ ................................ .................  156 \nJava \u2013 String hashCode() Method  ................................ ................................ ................................ ................  157 \nJava \u2013 String indexOf( int ch ) Method  ................................ ................................ ................................ ..........  158 \nJava \u2013 String indexOf( int ch, int fromIndex ) Method  ................................ ................................ ..................  159 \nJava \u2013 String indexOf( String str ) Method  ................................ ................................ ................................ .... 160 \nJava \u2013 String indexOf(String str, int fromIndex) Method  ................................ ................................ .............  161 \nJava \u2013 String Intern() Method  ................................ ................................ ................................ ......................  162 \nJava \u2013 String lastIndexOf(int ch) Method  ................................ ................................ ................................ .... 163 \nJava \u2013 String lastIndexOf(int ch, int fromIndex) Method  ................................ ................................ ............  164 \nJava \u2013 String lastIndexO f(String str ) Method  ................................ ................................ ...............................  165 \nJava \u2013 String lastIndexOf( String str, int fromIndex ) Method  ................................ ................................ .......  166 \nJava \u2013 String length() Method  ................................ ................................ ................................ .....................  167 \nJava \u2013 String matches() Method  ................................ ................................ ................................ ..................  168 \nJava \u2013 String regionMatches() Method  ................................ ................................ ................................ .......  169 \nJava \u2013 String regionMatches() Method  ................................ ................................ ................................ .......  171 \nJava \u2013 String replace() Method  ................................ ................................ ................................ ....................  173 \nJava \u2013 String replaceAll() Method  ................................ ................................ ................................ ................  174 \nJava \u2013 String replaceFirst() Method  ................................ ................................ ................................ .............  175 \nJava \u2013 String split() Method  ................................ ................................ ................................ .........................  176 \nJava \u2013 String split() Method  ................................ ................................ ................................ .........................  178 \nJava \u2013 String startsWith() Method  ................................ ................................ ................................ ...............  180 \nJava \u2013 String startsWith() Method  ................................ ................................ ................................ ...............  181 \nJava \u2013 String subsequence() Method  ................................ ................................ ................................ ..........  182 \nJava \u2013 String substring() Method  ................................ ................................ ................................ .................  183 \nJava \u2013 String substring() Method  ................................ ................................ ................................ .................  184 \nJava \u2013 String toCharArray() Method  ................................ ................................ ................................ ............  186 \nJava \u2013 String toLowerCase() Meth od ................................ ................................ ................................ ...........  187 \nJava \u2013 String toLowerCase() Method  ................................ ................................ ................................ ...........  188 \nJava \u2013 String toString() Method  ................................ ................................ ................................ ...................  189 \nJava \u2013 String toUpperCase() Method  ................................ ................................ ................................ ...........  189", "start_char_idx": 0, "end_char_idx": 7696, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d3bc76e9-6b41-40fd-9bad-db965005b041": {"__data__": {"id_": "d3bc76e9-6b41-40fd-9bad-db965005b041", "embedding": null, "metadata": {"page_label": "7", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "96602aeb-7d12-4de0-8f57-686e0c9b9d39", "node_type": "4", "metadata": {"page_label": "7", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "a974bc3f68c9f4bb6f706b95330bfb1cf404e695ef22ff80b22d2d84f83c7997", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2cbb124b-d339-485e-9537-fc1f61a9ace0", "node_type": "1", "metadata": {"page_label": "6", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "dc7e9e64af1962ea541c312bf9ae667d25c6ad40f32126dd8fc76e025e57426c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6116c89f-052d-431f-9d14-cf114c79aeff", "node_type": "1", "metadata": {}, "hash": "9e9f02b768e0cbc6befac8148be7115769fe111f3bd32edaa1b2caf226c52a98", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \nvi \n \nJava \u2013 String toUpperCase() Method  ................................ ................................ ................................ ...........  190 \nJava \u2013 String trim() Method  ................................ ................................ ................................ .........................  191 \nJava \u2013 String valueOf() Method  ................................ ................................ ................................ ...................  192 \n14. Java \u2013 Arrays  ................................ ................................ ................................ ................................ .........  196 \nDeclaring Array Variables  ................................ ................................ ................................ ............................  196 \nCreating Arrays  ................................ ................................ ................................ ................................ ............  196 \nProcessing Arrays  ................................ ................................ ................................ ................................ ........  198 \nThe foreach Loops  ................................ ................................ ................................ ................................ .......  199 \nPassing Arrays to Methods  ................................ ................................ ................................ ..........................  199 \nReturning an Array from a Method  ................................ ................................ ................................ .............  200 \nThe Arrays Class  ................................ ................................ ................................ ................................ ...........  200 \n15. Java \u2013 Date & Time  ................................ ................................ ................................ ...............................  202 \nGetting Current Date & Time ................................ ................................ ................................ .......................  203 \nDate Comparison  ................................ ................................ ................................ ................................ .........  204 \nSimple DateFormat Format Codes  ................................ ................................ ................................ ..............  205 \nDate and Time Conversion Characters  ................................ ................................ ................................ ........  208 \nParsing Strings into Dates  ................................ ................................ ................................ ............................  209 \nSleeping for a While  ................................ ................................ ................................ ................................ .... 210 \nMeasuring Elapsed Time  ................................ ................................ ................................ .............................  211 \nGregorianCalendar Class  ................................ ................................ ................................ .............................  212 \n16. Java \u2013 Regular Expressions  ................................ ................................ ................................ ....................  218 \nCapturing Groups  ................................ ................................ ................................ ................................ ........  218 \nRegular Expression Syntax  ................................ ................................ ................................ ...........................  220 \nMethods of the Matcher Class  ................................ ................................ ................................ ....................  223 \n17. Java \u2013 Methods  ................................ ................................ ................................ ................................ ..... 230 \nCreating Method  ................................ ................................ ................................ ................................ .........  230 \nMethod Calling  ................................ ................................ ................................ ................................ ............  231 \nThe void Key word  ................................ ................................ ................................ ................................ ........  232 \nPassing Parameters by Value  ................................ ................................ ................................ .......................  233 \nMethod Overloading  ................................ ................................ ................................ ................................ ... 235 \nUsing Command -Line Arguments  ................................ ................................ ................................ ................  236 \nThe Constructors  ................................ ................................ ................................ ................................ .........  237 \nParameterized Constructor  ................................ ................................ ................................ .........................  238 \nThe this keyword  ................................ ................................ ................................ ................................ .........  239 \nVariable Arguments(var -args)  ................................ ................................ ................................ .....................  242 \nThe finalize( ) Method  ................................ ................................ ................................ ................................ . 243 \n18. Java \u2013 Files and I/O  ................................ ................................ ................................ ...............................  244 \nStream  ................................ ................................ ................................ ................................ .........................  244 \nStandard Streams  ................................ ................................ ................................ ................................ ........  247 \nReading an d Writing Files  ................................ ................................ ................................ ............................  248 \nByteArrayInputStream  ................................ ................................ ................................ ................................ . 250 \nDataInputStream  ................................ ................................ ................................ ................................ .........  253 \nFileOutputStream  ................................ ................................ ................................ ................................ ........  255 \nByteArrayOutputStream  ................................ ................................ ................................ ..............................  256 \nDataOu tputStream  ................................ ................................ ................................ ................................ ...... 259 \nFile Navigation and I/O  ................................ ................................ ................................ ................................  261", "start_char_idx": 0, "end_char_idx": 7441, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6116c89f-052d-431f-9d14-cf114c79aeff": {"__data__": {"id_": "6116c89f-052d-431f-9d14-cf114c79aeff", "embedding": null, "metadata": {"page_label": "8", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "781541c0-2d61-4162-8a59-b3457c1b0e2b", "node_type": "4", "metadata": {"page_label": "8", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "4b99c950f6dd48601eec03e3a03a2dd46a580cb2281206731fb35c8c991bd393", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d3bc76e9-6b41-40fd-9bad-db965005b041", "node_type": "1", "metadata": {"page_label": "7", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "384e1e380c194efd3f3512acb5bd4f3bfe9d660870aab479beb01550eabda718", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4fa3b8c-d4bc-4ef9-b49a-77fb22c9f0f9", "node_type": "1", "metadata": {}, "hash": "931df91e3dc61fc78f6f9de4de2892c7097b32f3e3e20e7e80fa32f757dcf812", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \nvii \n \nFile Class  ................................ ................................ ................................ ................................ ......................  262 \nDirectories in Java ................................ ................................ ................................ ................................ ........  272 \nListing Directories  ................................ ................................ ................................ ................................ ........  273 \n19. Java \u2013 Exceptions  ................................ ................................ ................................ ................................ .. 275 \nException Hierarchy ................................ ................................ ................................ ................................ ..... 276 \nBuilt -in Exceptions  ................................ ................................ ................................ ................................ .......  277 \nExceptio ns Methods  ................................ ................................ ................................ ................................ .... 279 \nCatching Exceptions  ................................ ................................ ................................ ................................ ..... 280 \nMultiple Catch Blocks  ................................ ................................ ................................ ................................ .. 281 \nCatching Multiple Type of Exceptions  ................................ ................................ ................................ .........  282 \nThe Throws/Throw Keywords  ................................ ................................ ................................ .....................  282 \nThe Finally Block  ................................ ................................ ................................ ................................ ..........  283 \nThe try -with -resources  ................................ ................................ ................................ ................................  285 \nUser -defined Exceptions  ................................ ................................ ................................ ..............................  287 \nCommon Exceptions  ................................ ................................ ................................ ................................ .... 290 \n20. Java \u2013 Inner Classes  ................................ ................................ ................................ ...............................  291 \nNested Classes  ................................ ................................ ................................ ................................ .............  291 \nInner Classes (Non -static Nested Classes)  ................................ ................................ ................................ ... 292 \nAccessing the Private Members  ................................ ................................ ................................ ..................  293 \nMethod -local Inner Class  ................................ ................................ ................................ .............................  294 \nAnonymous Inner Class  ................................ ................................ ................................ ...............................  295 \nAnonymous Inner Class as Argument  ................................ ................................ ................................ ..........  296 \nStatic Nested Class ................................ ................................ ................................ ................................ .......  297 \nJAVA - OBJECT ORIENT ED ................................ ................................ ................................ ........  299 \n21. Java \u2013 Inheritance  ................................ ................................ ................................ ................................ . 300 \nextends Keyword  ................................ ................................ ................................ ................................ .........  300 \nSample Code  ................................ ................................ ................................ ................................ ................  300 \nThe super keyword  ................................ ................................ ................................ ................................ ...... 302 \nInvoking Superclass Constructor  ................................ ................................ ................................ .................  305 \nIS-A Relationship  ................................ ................................ ................................ ................................ ..........  306 \nThe instanceof Keyword  ................................ ................................ ................................ ..............................  308 \nHAS-A relationsh ip ................................ ................................ ................................ ................................ .......  309 \nTypes of Inheritance  ................................ ................................ ................................ ................................ .... 309 \n22. Java \u2013 Overriding  ................................ ................................ ................................ ................................ .. 311 \nRules for Method Overriding  ................................ ................................ ................................ .......................  313 \nUsing the super Keyword  ................................ ................................ ................................ ............................  314 \n23. Java \u2013 Polymorphism  ................................ ................................ ................................ ............................  315 \nVirtual Methods  ................................ ................................ ................................ ................................ ...........  316 \n24. Java \u2013 Abstraction  ................................ ................................ ................................ ................................ . 320 \nAbstract Class  ................................ ................................ ................................ ................................ ..............  320 \nInheriting the Abstract Class ................................ ................................ ................................ ........................  323 \nAbstract Methods  ................................ ................................ ................................ ................................ ........  324", "start_char_idx": 0, "end_char_idx": 6818, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b4fa3b8c-d4bc-4ef9-b49a-77fb22c9f0f9": {"__data__": {"id_": "b4fa3b8c-d4bc-4ef9-b49a-77fb22c9f0f9", "embedding": null, "metadata": {"page_label": "9", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2fa9df47-4ea6-49bb-a9b8-e7be5339063c", "node_type": "4", "metadata": {"page_label": "9", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "8572867db95125aa9aaa74eb2b031068668d045f55143a822a91920934414fbd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6116c89f-052d-431f-9d14-cf114c79aeff", "node_type": "1", "metadata": {"page_label": "8", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "5f8c7806c645177400f5b3a5f8ac9acbfcc39eb1d11ff68c6082e1a20400e376", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "77bf1d89-c015-42be-9e31-c0e57ff6079c", "node_type": "1", "metadata": {}, "hash": "c0b65fd1d991654671e6efd3e26633059168653ee48ca079395e233e3576af4a", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \nviii \n \n25. Java \u2013 Encapsulation  ................................ ................................ ................................ .............................  326 \nBenefits of Encapsulation  ................................ ................................ ................................ ............................  328 \n26. Java \u2013 Interfaces  ................................ ................................ ................................ ................................ ... 329 \nDeclaring Interfaces  ................................ ................................ ................................ ................................ ..... 330 \nImplementing Interfaces  ................................ ................................ ................................ .............................  330 \nExtending Interfaces  ................................ ................................ ................................ ................................ .... 332 \nExtend ing Multiple Interfaces  ................................ ................................ ................................ .....................  333 \nTagging Interfaces  ................................ ................................ ................................ ................................ .......  333 \n27. Java \u2013 Packages  ................................ ................................ ................................ ................................ ..... 334 \nCreating a Package  ................................ ................................ ................................ ................................ ...... 334 \nThe impo rt Keyword  ................................ ................................ ................................ ................................ .... 336 \nThe Directory Structure of Packages  ................................ ................................ ................................ ...........  337 \nSet CLASSPATH System Variable ................................ ................................ ................................ ..................  339 \nJAVA \u2013 ADVANCED  ................................ ................................ ................................ ..................  340 \n28. Java \u2013 Data Structures  ................................ ................................ ................................ ...........................  341 \nThe Enumeration  ................................ ................................ ................................ ................................ .........  341 \nThe BitSet  ................................ ................................ ................................ ................................ ....................  343 \nThe Vector  ................................ ................................ ................................ ................................ ...................  348 \nThe Stack  ................................ ................................ ................................ ................................ .....................  355 \nThe Dictionary  ................................ ................................ ................................ ................................ .............  358 \nThe Hashtable  ................................ ................................ ................................ ................................ ..............  362 \nThe Properties  ................................ ................................ ................................ ................................ .............  366 \n29. Java \u2013 Collections Framework  ................................ ................................ ................................ ...............  370 \nThe Collection Interfaces  ................................ ................................ ................................ .............................  371 \nThe Collection Interface  ................................ ................................ ................................ ..............................  372 \nThe List Interface  ................................ ................................ ................................ ................................ .........  375 \nThe Set Interface  ................................ ................................ ................................ ................................ .........  378 \nThe SortedSet Interface  ................................ ................................ ................................ ...............................  380 \nThe Map Interface  ................................ ................................ ................................ ................................ .......  382 \nThe Map.En try Interface  ................................ ................................ ................................ ..............................  384 \nThe SortedMap Interface  ................................ ................................ ................................ ............................  386 \nThe Enumeration Interface ................................ ................................ ................................ ..........................  388 \nThe Collection Classes  ................................ ................................ ................................ ................................ . 389 \nThe LinkedList Class  ................................ ................................ ................................ ................................ ..... 391 \nThe Ar rayList Class  ................................ ................................ ................................ ................................ .......  395 \nThe HashSet Class  ................................ ................................ ................................ ................................ ........  399 \nThe LinkedHashSet Class  ................................ ................................ ................................ .............................  402 \nThe TreeSet Class  ................................ ................................ ................................ ................................ .........  403 \nThe HashMa p Class  ................................ ................................ ................................ ................................ ...... 406 \nThe TreeMap Class  ................................ ................................ ................................ ................................ ...... 409 \nThe WeakHashMap Class  ................................ ................................ ................................ ............................  412 \nThe LinkedHashMap Class  ................................ ................................ ................................ ...........................  415 \nThe IdentityHashMap Class  ................................ ................................ ................................ .........................  418 \nThe Vector Class  ................................ ................................ ................................ ................................ ..........  422 \nThe Stack Class  ................................ ................................ ................................ ................................ ............  428", "start_char_idx": 0, "end_char_idx": 7340, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "77bf1d89-c015-42be-9e31-c0e57ff6079c": {"__data__": {"id_": "77bf1d89-c015-42be-9e31-c0e57ff6079c", "embedding": null, "metadata": {"page_label": "10", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "918544ce-753e-438e-9e68-7f25175a4a99", "node_type": "4", "metadata": {"page_label": "10", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "37372a1fb80660840f0da9287dd05c42d2d586f5db7f4f1935652839037f3c79", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4fa3b8c-d4bc-4ef9-b49a-77fb22c9f0f9", "node_type": "1", "metadata": {"page_label": "9", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "58a27b3b4b8fa2106f3703b18d28b3530aa533d80c38dedc3a2e00d4e0aa765b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "98a47030-c049-422a-8c06-a4b2ffdc2678", "node_type": "1", "metadata": {}, "hash": "967fbefabdc5450b80b61f4b67130a02d0eb5c373ac9f76ae3ec543cbecdad73", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \nix \n \nThe Dictionary Class  ................................ ................................ ................................ ................................ .... 430 \nThe Map Interface  ................................ ................................ ................................ ................................ .......  431 \nThe Hashta ble Class  ................................ ................................ ................................ ................................ ..... 433 \nThe Properties Class  ................................ ................................ ................................ ................................ .... 437 \nThe BitSet Class  ................................ ................................ ................................ ................................ ...........  440 \nThe Collection Algorithms  ................................ ................................ ................................ ...........................  445 \nHow to Use an Iterator ?  ................................ ................................ ................................ .............................  450 \nHow to Use a Comparator ?  ................................ ................................ ................................ ........................  454 \nSummary  ................................ ................................ ................................ ................................ .....................  456 \n30. Java \u2013 Generics  ................................ ................................ ................................ ................................ ..... 457 \nGeneric Methods  ................................ ................................ ................................ ................................ .........  457 \nBounded Type  Parameters  ................................ ................................ ................................ ..........................  459 \nGeneric Classes  ................................ ................................ ................................ ................................ ............  460 \n31. Java \u2013 Serialization  ................................ ................................ ................................ ................................  462 \nSerializing an Object  ................................ ................................ ................................ ................................ .... 463 \nDeserializing an Object  ................................ ................................ ................................ ................................  464 \n32. Java \u2013 Networking  ................................ ................................ ................................ ................................ . 466 \nURL Processing  ................................ ................................ ................................ ................................ ............  466 \nURL Class Methods  ................................ ................................ ................................ ................................ ...... 467 \nURLConnections Class Methods  ................................ ................................ ................................ ..................  470 \nSocket Programming  ................................ ................................ ................................ ................................ ... 473 \nServerSocket Class Methods  ................................ ................................ ................................ .......................  474 \nSocket Class Methods  ................................ ................................ ................................ ................................ .. 475 \nInetAddress Class Methods  ................................ ................................ ................................ .........................  477 \nSocket Client Example  ................................ ................................ ................................ ................................ . 477 \nSocket Server Example  ................................ ................................ ................................ ................................  479 \n33. Java \u2013 Sending E -mail  ................................ ................................ ................................ ............................  481 \nSend a Simple E -mail  ................................ ................................ ................................ ................................ ... 481 \nSend an HTML E -mail  ................................ ................................ ................................ ................................ ... 483 \nSend Attachment in E -mail  ................................ ................................ ................................ ..........................  485 \nUser Authentication Part  ................................ ................................ ................................ .............................  487 \n34. Java \u2013 Multithreading  ................................ ................................ ................................ ...........................  488 \nLife Cycle of a Thread  ................................ ................................ ................................ ................................ .. 488 \nThread Priorities  ................................ ................................ ................................ ................................ ..........  489 \nCreate a T hread by Implementing a Runnable Interface  ................................ ................................ ............  489 \nCreate a Thread by Extending a Thread Class  ................................ ................................ .............................  491 \nThread Methods  ................................ ................................ ................................ ................................ ..........  494 \nMajor Java Multithreading Concepts  ................................ ................................ ................................ ..........  499 \nThread Synchronization  ................................ ................................ ................................ ...............................  499 \nInterthread Communication  ................................ ................................ ................................ ........................  504 \nThread Deadlock  ................................ ................................ ................................ ................................ ..........  507 \nThread Control ................................ ................................ ................................ ................................ .............  510 \n35. Java \u2013 Applet Basics  ................................ ................................ ................................ ..............................  515 \nLife Cycle of an Applet  ................................ ................................ ................................ ................................ . 515 \nA \"Hello, World\" Applet  ................................ ................................ ................................ ...............................  516", "start_char_idx": 0, "end_char_idx": 7284, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98a47030-c049-422a-8c06-a4b2ffdc2678": {"__data__": {"id_": "98a47030-c049-422a-8c06-a4b2ffdc2678", "embedding": null, "metadata": {"page_label": "11", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b1f6c6f4-754a-4f1c-9549-eb88cf58dcc8", "node_type": "4", "metadata": {"page_label": "11", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "cb15422d22d86b5d33c2d9a052e39873dd69c7d7ba46269e0a8722a4eac61d22", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "77bf1d89-c015-42be-9e31-c0e57ff6079c", "node_type": "1", "metadata": {"page_label": "10", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "d27cc2d01d2a458f0ea3e959bf6fed6fe7fad918e8294437a8a9d883a5b9099e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b40c40e6-7e9c-477a-9113-62424bb6cdf0", "node_type": "1", "metadata": {}, "hash": "132b11ab024d5092d9ad54f2026e48de66dd5a5e09dd22fcfb50ba8a109c6553", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \nx \n \nThe Applet Class  ................................ ................................ ................................ ................................ ..........  516 \nInvoking a n Applet  ................................ ................................ ................................ ................................ .......  517 \nHTML <applet> Tag  ................................ ................................ ................................ ................................ ...... 517 \nHTML Attribute Reference  ................................ ................................ ................................ ..........................  519 \nHTML Events Reference  ................................ ................................ ................................ ..............................  521 \nGetting Applet Parameters  ................................ ................................ ................................ ..........................  526 \nSpecifying Applet Parameters  ................................ ................................ ................................ .....................  527 \nApplication Conversion to Applets  ................................ ................................ ................................ ..............  527 \nEvent Handling  ................................ ................................ ................................ ................................ ............  528 \nDisplaying Images  ................................ ................................ ................................ ................................ ........  530 \nPlaying Au dio ................................ ................................ ................................ ................................ ...............  532 \n36. Java \u2013 Documentation Comments  ................................ ................................ ................................ .........  534 \nWhat is Javadoc?  ................................ ................................ ................................ ................................ .........  534 \nThe javadoc Tags  ................................ ................................ ................................ ................................ .........  535", "start_char_idx": 0, "end_char_idx": 2280, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b40c40e6-7e9c-477a-9113-62424bb6cdf0": {"__data__": {"id_": "b40c40e6-7e9c-477a-9113-62424bb6cdf0", "embedding": null, "metadata": {"page_label": "12", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java \u2013 Basics"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ac0f4129-3cec-4c7c-a9bc-6480d9bdcea0", "node_type": "4", "metadata": {"page_label": "12", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "bdf00cefed7c50801dbba8cbbc6f73253adc59b1c2c119ea8b5471f54ef1c416", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "98a47030-c049-422a-8c06-a4b2ffdc2678", "node_type": "1", "metadata": {"page_label": "11", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "6296d3a650ba084ea662ebb59ab6852832e009c5f9054c6a367b1e45e404ba91", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79d65bb7-4889-4081-8162-ce80c2dfdaff", "node_type": "1", "metadata": {}, "hash": "71acb9de0bd146ef810728b1f7dc9f909522d20e773dc53f59abc5023c564282", "class_name": "RelatedNodeInfo"}}, "text": "Java \u2013 Basics", "start_char_idx": 0, "end_char_idx": 13, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79d65bb7-4889-4081-8162-ce80c2dfdaff": {"__data__": {"id_": "79d65bb7-4889-4081-8162-ce80c2dfdaff", "embedding": null, "metadata": {"page_label": "13", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java", "Java Standard Edition", "Object Oriented", "C", "Java ME", "Java EE", "James Gosling", "Sun Microsystems", "Java SE", "Java 2 Java", "Java SE 8"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5feedd47-52d1-4133-af65-c2c1810dc912", "node_type": "4", "metadata": {"page_label": "13", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "7edbbf7c814027cc8b7fbfa17a4d1e278555bd0c2fad43eff9755be4dfa7c19b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b40c40e6-7e9c-477a-9113-62424bb6cdf0", "node_type": "1", "metadata": {"page_label": "12", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "ce6a96c1f0a1492f0004cf31d3f69678ab4d28a1df64669bf488aaf6485538f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d97649ce-5fac-4a45-89ba-aa4554be5406", "node_type": "1", "metadata": {}, "hash": "175f24b37bfd8e2a192f4db35e2df7ee446059247297c4463909694d95de4603", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n2 \n \nJava programming language was originally developed by Sun Microsystems which was \ninitiated by James Gosling and released in 1995 as core component of Sun Microsystems' \nJava platform (Java 1.0 [J2SE]).  \nThe latest release of the Java Standard Edition is Java SE 8. With the advancement of Java \nand its widespread popularity, multiple configurations were built to suit various types of \nplatforms. For example : J2EE for Enterprise Applications, J2ME for  Mobile Applications.  \nThe new J2 versions were renamed as Java SE, Java EE , and Java ME respectively. Java \nis guaranteed to be  Write Once, Run Anywhere . \nJava is:  \n\uf0b7 Object Oriented:  In Java, everything is an Object. Java can be easily extended \nsince it is based on the Object model.  \n\uf0b7 Platform Independent:  Unlike many other programming languages including C \nand C++, when Java is compiled, it is not compiled into platform specific machine, \nrather into platform independent byte code. This byte code is distribut ed over the \nweb and interpreted by the Virtual Machine (JVM) on whichever platform it is being \nrun on. \n\uf0b7 Simple:  Java is designed to be easy to learn. If you understand the basic concept \nof OOP Java , it would be easy to master.  \n\uf0b7 Secure:  With Java's secure feature it enables to develop virus -free, tamper -free \nsystems. Authentication techniques are based on public -key encryption.  \n\uf0b7 Architectur e-neutral:  Java compiler generates an architecture -neutral object \nfile format , which makes the compiled code executable on many processors, with \nthe presence of Java runtime system.  \n\uf0b7 Portable:  Being architectur e-neutral and having no implementation dependent \naspects of the specification makes Java portable. Compiler in Java is written in \nANSI C with a clean portability boundary , which is a POSIX subset.  \n\uf0b7 Robust:  Java makes an effort to eliminate error prone situations by emphasizing \nmainly on compile time error checking and runtime checking.  \n\uf0b7 Multithreaded:  With Java's multithreaded feature it is possible to wr ite programs \nthat can perform many tasks simultaneously. This design feature allows the \ndevelopers to construct interactive applications that can run smoothly . \n\uf0b7 Interpreted:  Java byte code is translated on the fly to nati ve machine \ninstructions and is not stored anywhere. The development process is more rapid \nand analytical since the linking is an incremental and light -weight process.  \n\uf0b7 High Performance:  With the use of Just -In-Time compilers, Java enables high \nperformance.  1.   Java \u2013 Overview", "start_char_idx": 0, "end_char_idx": 2566, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d97649ce-5fac-4a45-89ba-aa4554be5406": {"__data__": {"id_": "d97649ce-5fac-4a45-89ba-aa4554be5406", "embedding": null, "metadata": {"page_label": "14", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["James Gosling", "Java", "C++"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5a316916-6da1-485c-b7de-9caf67f622ad", "node_type": "4", "metadata": {"page_label": "14", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "f91320505ef25cabe597c1c50817b48707fc1194a7b3a73bb415cd11c1a4cd83", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79d65bb7-4889-4081-8162-ce80c2dfdaff", "node_type": "1", "metadata": {"page_label": "13", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "363f43b4334ee82cebfbde2b8e1138a2612f43d5ad6106497e7a450217de7fb3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11041b0e-0ae7-4c96-9478-1766adfc40e6", "node_type": "1", "metadata": {}, "hash": "df8cc24b2f70c6f055b12653c2c2d71954793cb1d004f822d134386a1c71f934", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n3 \n \n\uf0b7 Distributed:  Java is designed for the distributed environment of the internet.  \n\uf0b7 Dynamic:  Java is considered to be more dynamic than C or C++ since it is \ndesigned to adapt to an evolving environment. Java programs can carry extensive \namount of run -time info rmation that can be used to verify and resolve accesses \nto objects on run -time. \nHistory of Java  \nJames Gosling initiated  Java language project in June 1991 for use in one of his many set -\ntop box projects. The language, initially called \u2018Oak\u2019 after an oa k tree that stood outside \nGosling's office, also went by the name \u2018Green \u2019 and ended up later being renamed as Java, \nfrom a list of random words.  \nSun released the first public implementation as Java 1.0 in 1995. It promised  Write Once, \nRun Anywhere  (WORA), providing no -cost run -times on popular platforms.  \nOn 13 November , 2006, Sun released much of Java as free and open source software \nunder the terms of the GNU General Public License (GPL).  \nOn 8 May , 2007, Sun finished the process, making all of Java's core code free and open -\nsource, aside from a small portion of code to which Sun did not hold the copyright.  \nT ools You Will Need \nFor performing the examples discussed in this tutorial, you will need a Pentium 200 -MHz \ncomputer with a minimum of 64 MB of RAM (128 MB of RAM recommended).  \nYou will also need the following softwares:  \n\uf0b7 Linux 7.1 or Windows xp/7/8 operating system  \n\uf0b7 Java JDK 8  \n\uf0b7 Microsoft Notepad or any other text editor  \nThis tutorial will p rovide the necessary skills to create GUI, networking, and web \napplications using Java.", "start_char_idx": 0, "end_char_idx": 1626, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11041b0e-0ae7-4c96-9478-1766adfc40e6": {"__data__": {"id_": "11041b0e-0ae7-4c96-9478-1766adfc40e6", "embedding": null, "metadata": {"page_label": "15", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Hello World", "Java 4 Try It Option"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5d7c0f4a-ce98-49a0-8823-b541cb349ab4", "node_type": "4", "metadata": {"page_label": "15", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "909af2cedb5896a1bd2d1a73720b5bace145bcef32e574d202a8b60c46c6b4e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d97649ce-5fac-4a45-89ba-aa4554be5406", "node_type": "1", "metadata": {"page_label": "14", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "b37c8e75ed35069448e378ce2e817b858d0b6c665da2c4ced0239a0a769b3f80", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bcaa2efa-c4e4-43b8-bd6e-fb51523079e7", "node_type": "1", "metadata": {}, "hash": "742013d694463c2072ec9f5dddab9db8d6d0c98e1e93d0379be0abfec9e8a08d", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n4 \n \nTry It Option  \nWe have provided you with an option to compile and execute available code online. Just \nclick the Try it  button avaiable at the top-right corner of the code window to compile and \nexecute the available code. There are certain examples which can not be executed online, \nso we have skipped those examples.  \npublic class MyFirstJavaProgram  { \n \n    public static void main(String []args) { \n       System.out.println(\"Hello World\" ); \n    } \n}  \nThere may be a case that you do not see the result of the compiled/executed code . In \nsuch case , you can re -try to compile and execute the code using  execute  button available \nin the compilation pop-up window.  \nWhat is Next?  \nThe n ext chapter will guide you to how you can obtain Java and its documentation.  Finally, \nit instructs you on how to install Java and prepare an environment to develop Java \napplications.", "start_char_idx": 0, "end_char_idx": 900, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bcaa2efa-c4e4-43b8-bd6e-fb51523079e7": {"__data__": {"id_": "bcaa2efa-c4e4-43b8-bd6e-fb51523079e7", "embedding": null, "metadata": {"page_label": "16", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f57a6795-5c23-489c-88dd-2e91fe69ca45", "node_type": "4", "metadata": {"page_label": "16", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "90c18886a16fda1b1ecf2233715ec347bf46ba4f327cac933348a17c5f8a017f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11041b0e-0ae7-4c96-9478-1766adfc40e6", "node_type": "1", "metadata": {"page_label": "15", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "a5429a680bf6f9fe2118e31ab3da7ee97883b10a07ff9157a9b3d175f8011c8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2736b32-079b-48ed-b32f-eee99bae3cea", "node_type": "1", "metadata": {}, "hash": "0aa633b1cdb99400798011a970746a8b55c3032ffbe105686018160baf8f25cc", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n5 \n \nIn this chapter, we will discuss on the different aspects of setting up a congenial \nenvironment for Java.  \nTry it Option Online  \nYou really do not need to set up your own environment to start learning Java programming \nlanguage. Reason is v ery simple, we already have Java Programming environment setup \nonline, so that you can compile and execute all the available examples online at the same \ntime when you are doing your theory work. This gives you confidence in what you are \nreading and t o check the result with different options. Feel free to modify any example \nand execute it online.  \nTry the following example using  Try it  option available at the top right corner of the \nfollowing sample code box:  \npublic class MyFirstJavaProgram  { \n \n    public static void main(String []args) { \n       System.out.println(\"Hello World\" ); \n    } \n}  \nFor most of the examples given in this tutorial, you will find  the Try it  option, which you \ncan use to execute your programs and enjoy your learning.  \nLocal Environment Setup  \nIf you are still willing to set up your environment for Java programming language, then \nthis section guides you on how to download and set up Java on your machine. Following \nare the steps to set up the environment.  \nJava SE is freely available from the link  Download Java . You can download a version based \non your operating system.  \nFollow the instructions to download Java and run the  .exe to install Java on your machine. \nOnce you installed Java on your machine, you will need to set environment variables to \npoint to correct installation directories:  \nSetting Up the Path for Windows  \nAssuming you have installed Java in  c:\\Program Files \\java\\jdk directory:  \n\uf0b7 Right-click on 'My Computer' and select 'Properties'.  \n \n\uf0b7 Click the 'Environment variables' button under the 'Advanced' tab.  2.   Java - Environment Setup", "start_char_idx": 0, "end_char_idx": 1887, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2736b32-079b-48ed-b32f-eee99bae3cea": {"__data__": {"id_": "a2736b32-079b-48ed-b32f-eee99bae3cea", "embedding": null, "metadata": {"page_label": "17", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Solaris", "Java", "UNIX"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a369623-bd19-4833-9261-634d1e656113", "node_type": "4", "metadata": {"page_label": "17", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "764c4f1e34a0ee0093122a73ca003137e86011404ae028abda6bb917bc320e32", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bcaa2efa-c4e4-43b8-bd6e-fb51523079e7", "node_type": "1", "metadata": {"page_label": "16", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "e779bff1120f745e637789362850cc2f085fdbf8766a16145187c19d9d8e00df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37a84805-3bc9-42c9-b762-371e42be5439", "node_type": "1", "metadata": {}, "hash": "2840079e7fc9212e05217058ad4ea6f99770e8e9101bd5bf9b413fc3c1092366", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n6 \n \n \n\uf0b7 Now, alter the 'Path' variable so that it also contains  the path to the Java \nexecutable. Example, if the path is currently set to 'C: \\WINDOWS \\SYSTEM32', then \nchange your path to read 'C: \\WINDOWS \\SYSTEM32;c: \\Program \nFiles\\java\\jdk\\bin'. \nSetting Up the Path for Linux, UNIX, Solaris, FreeBSD  \nEnvironment variab le PATH should be set to point to where the Java binaries have been \ninstalled. Refer to your shell documentation , if you have trouble doing this.  \nExample, if you use  bash  as your shell, then you would add the following line to the end \nof your '.bashrc: export PATH=/path/to/java:$PATH'  \nPopular Java Editors  \nTo write your Java programs, you will need a text editor. There are even more \nsophisticated IDEs available in the market. But for now, you can consider one of the \nfollowing:  \n\uf0b7 Notepad:  On Windows machine , you can use any simple text editor like Notepad \n(Recommended for this tutorial), TextPad.  \n \n\uf0b7 Netbeans:  A Java IDE that is open -source and free , which can be downloaded \nfrom http://www.netbeans .org/index.html . \n \n\uf0b7 Eclipse:  A Java IDE developed by the eclipse open -source community and can be \ndownloaded from  http://www.eclipse.org/ . \nWhat is Next?  \nNext chapter will teach you how to write  and run your first Java program and some of the \nimportant basic syntaxes in Java needed for developing applications.", "start_char_idx": 0, "end_char_idx": 1391, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "37a84805-3bc9-42c9-b762-371e42be5439": {"__data__": {"id_": "37a84805-3bc9-42c9-b762-371e42be5439", "embedding": null, "metadata": {"page_label": "18", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7079b63e-88ae-44d1-9990-06b581d35cf2", "node_type": "4", "metadata": {"page_label": "18", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "d815919dad419215c2c07c5149a48cade78d13f9ba8ec421a7c0d8e324f2b8a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2736b32-079b-48ed-b32f-eee99bae3cea", "node_type": "1", "metadata": {"page_label": "17", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "1df18fb75d055f472a2a62e9d8144c7d46c64c258cb9ceb39e729f23c61bed54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6bff1c15-1c1e-4ec5-8d3e-181cdc5c2344", "node_type": "1", "metadata": {}, "hash": "b8cc84830be828ca359d09e9e3430dc28b4aba512cb096e72cf2e2701b09ddc1", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n7 \n \nWhen we consider a Java program , it can be defined as a collection of objects that \ncommunicate via invoking each other's methods. Let us now briefly look into what do class, \nobject, methods , and instance variables mean.  \n\uf0b7 Object - Objects have states and behavio rs. Example: A dog has states - color, \nname, breed as well as behavio r such as wagging  their tail , barking, eating. An \nobject is an instance of a class.  \n\uf0b7 Class - A class can be defined as a template/ blueprint that describes the \nbehavio r/state  that the object of its type support s. \n\uf0b7 Methods - A method is basically a behavio r. A class can contain many methods. \nIt is in methods where the logics are written, data is manipulated and all the \nactions are executed.  \n\uf0b7 Instance Variables - Each object has its unique set of instance va riables. An \nobject's state is created by the values assigned to these instance variables.  \nFirst Java Program  \nLet us look at a simple code that w ill print the words  Hello World . \npublic class MyFirstJavaProgram  { \n \n   /* This is my first java program.   \n    * This will print 'Hello World' as the output  \n    */ \n  \n    public static void main(String []args) { \n       System.out.println(\"Hello World\" ); // prints Hello World  \n    } \n}  \nLet's look at how to save the file, compile , and run the program. Please follow  the \nsubsequent steps : \n\uf0b7 Open notepad and add the code as above.  \n \n\uf0b7 Save the file as: MyFirstJavaProgram.java.  \n \n\uf0b7 Open a command prompt window and go to the directory where you saved the \nclass. Assume it's C: \\. \n 3.   Java \u2013 Basic Syntax", "start_char_idx": 0, "end_char_idx": 1612, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6bff1c15-1c1e-4ec5-8d3e-181cdc5c2344": {"__data__": {"id_": "6bff1c15-1c1e-4ec5-8d3e-181cdc5c2344", "embedding": null, "metadata": {"page_label": "19", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Hello World Basic Syntax About Java", "H ello World"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a00125db-7485-4d11-a988-bb4af10e1946", "node_type": "4", "metadata": {"page_label": "19", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "cf9e3db2deb0d4b2ee67bba296fcf98c15938d27037c61032e721a206ed4aa9c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37a84805-3bc9-42c9-b762-371e42be5439", "node_type": "1", "metadata": {"page_label": "18", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "df4864848559d2c1f475e611a8b10aa383c097755562c70803bfbb7961eda8ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96001b07-4a73-4238-b160-ac18db4b9e25", "node_type": "1", "metadata": {}, "hash": "53839f7acd871d1d942d8165ac3dd97ab3348c7cb7cc7b535bb45fea21b76a46", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n8 \n \n\uf0b7 Type ' javac MyFirstJavaProgram.java'  and press enter to compile your code. If \nthere are no errors in your code, the command prompt will take you to the next \nline (Assumption : The path variable is set).  \n \n\uf0b7 Now, type ' java MyFirstJavaProgram ' to run your program.  \n \n\uf0b7 You will be able to see ' H ello World ' printed on the window.  \nC:\\> javac MyFirstJavaProgram.java  \nC:\\> java MyFirstJavaProgram  \nHello World  \nBasic Syntax  \nAbout Java programs, it is very important to keep in mind the following points.  \n\uf0b7 Case Sensitivity - Java is case sensitive, which means \nidentifier  Hello and hello  would have different meaning in Java.  \n\uf0b7 Class Names - For all class names the first letter should be in Upper Case.   \n \nIf several words are used to form a name of the class, each inner word's first letter \nshould be in Upper Cas e. \nExample : class MyFirstJavaClass  \n\uf0b7 Method Names - All method names should start with a Lower Case letter.   \n \nIf several words are used to form the name of the method, then each inner word's \nfirst letter should be in Upper Case.  \nExample : public void myMethodName()  \n\uf0b7 Program File Name - Name of the program file should exactly match the class \nname.   \n \nWhen saving the file, you should save it using the class name (Remember Java is \ncase sensitive) and append '.java' to the end of the name (if the file name a nd the \nclass name do not match , your program will not compile).  \n \nExample : Assume 'MyFirstJavaProgram' is the class name. Then the file should \nbe saved as  'MyFirstJavaProgram.java'  \n\uf0b7 public static void main(String args[]) - Java program processing starts from  \nthe main() method which is a mandatory part of every Java program.", "start_char_idx": 0, "end_char_idx": 1722, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96001b07-4a73-4238-b160-ac18db4b9e25": {"__data__": {"id_": "96001b07-4a73-4238-b160-ac18db4b9e25", "embedding": null, "metadata": {"page_label": "20", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java 9 Java Identifiers", "Java", "Java Modifiers"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e925fb3-c80b-4450-98a4-a84ad93d7c6a", "node_type": "4", "metadata": {"page_label": "20", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "50c0ffb61ca1ee369389a7c803ec7c260c798e5eb6e89480f41925b9d5a8fc22", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6bff1c15-1c1e-4ec5-8d3e-181cdc5c2344", "node_type": "1", "metadata": {"page_label": "19", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "0489b90b96773370a8b319b59a944a5e7f1a21e1504ba01adc64222a3e4b153f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fff6adb4-c14c-4503-986a-d536277e7948", "node_type": "1", "metadata": {}, "hash": "e12c4291139e3ef7078a17de14bb1bf86e0752c17504396ad3ce8118663e41a8", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n9 \n \nJava Identifiers  \nAll Java components require names. Names used for classes, variables , and methods are \ncalled identifiers . \nIn Java, there are several points to remember about identifiers. They are as follows:  \n\uf0b7 All identifiers should begin with a letter (A to Z or a to z), currency character ($) \nor an underscore (_).  \n\uf0b7 After the first character , identifiers can have any combination of characters.  \n\uf0b7 A key word cannot be used as an identifier.  \n\uf0b7 Most importantly , identifiers are case sensitive.  \n\uf0b7 Examples of legal identifiers: age, $salary, _value, __1_value . \n\uf0b7 Examples of illegal identifiers: 123abc, -salary . \nJava Modifiers  \nLike other languages, it is possible to modify classes, methods, etc., by using modifiers. \nThere are two categories of modifiers:  \n\uf0b7 Access Modifiers:  default, public , protected, private  \n\uf0b7 Non-access Modifiers:  final, abstract, strictfp  \nWe will be looking into more details about modifiers in the next section.  \nJava Variables  \nFollowing are the types of variables in Java:  \n\uf0b7 Local Variables  \n\uf0b7 Class Variables (Static Variables)  \n\uf0b7 Instance Variables (Non -static Variables)  \nJava Arrays  \nArrays are objects that store multiple variables of the same type. However, an array itself \nis an object on the heap. We will look into how to declare, construct , and initialize in the \nupcoming chapters.", "start_char_idx": 0, "end_char_idx": 1382, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fff6adb4-c14c-4503-986a-d536277e7948": {"__data__": {"id_": "fff6adb4-c14c-4503-986a-d536277e7948", "embedding": null, "metadata": {"page_label": "21", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1175ff1a-8811-43d2-8cba-f596b33505a2", "node_type": "4", "metadata": {"page_label": "21", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "15de52c7a18a5881d925966e62be7c82a4e75f897dd26376616280a898467eac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96001b07-4a73-4238-b160-ac18db4b9e25", "node_type": "1", "metadata": {"page_label": "20", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "d677ea1515bd52c5dca7164f06ff4ee6685b435e5d2b4271e4a04fbfc8473c1c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a1a92b2-cd39-4590-bfa5-71447b1e48e8", "node_type": "1", "metadata": {}, "hash": "bedff75b6ed07b2fe27898e29ec3db038543fd4abfe4b44d2cce57800b422e9e", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n10 \n \nJava Enums  \nEnums were introduced in Java 5.0. Enums restrict a variable to have one of only a few \npredefined values. The value s in this enumerated list are called enums.  \nWith the use of enums it is possible to reduce the number of bugs in your code.  \nFor example, if we consider an application for a fresh juice shop, it would be possible to \nrestrict the glass size to small, medium , and large. This would make sure that it would not \nallow anyone to order any size other than small, medium , or large.  \nExample  \nclass FreshJuice  { \n \n   enum FreshJuiceSize { SMALL, MEDIUM, LARGE } \n   FreshJuiceSize  size; \n} \n \npublic class FreshJuiceTest  { \n \n   public static void main(String args[]){ \n      FreshJuice  juice = new FreshJuice (); \n      juice.size = FreshJuice .FreshJuiceSize .MEDIUM ; \n      System.out.println(\"Size: \"  + juice.size); \n   } \n} \n \nThe a bove example will produce the following result:  \nSize: MEDIUM \nNote:  Enums can be declared as their own or inside a class. Methods, variables, \nconstructors can be defined inside enums as well.  \nJava Keywords  \nThe following list shows the reserved words in Java. These reserved words may not be \nused as constant or variable or any other identifier names.  \nabstract  assert  boolean  break  \nbyte case catch  char", "start_char_idx": 0, "end_char_idx": 1308, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6a1a92b2-cd39-4590-bfa5-71447b1e48e8": {"__data__": {"id_": "6a1a92b2-cd39-4590-bfa5-71447b1e48e8", "embedding": null, "metadata": {"page_label": "22", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java", "Java Java", "MyFirstJavaProgram", "C", "C++"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1bd3b4cb-dbd2-4667-adc8-a07782409db7", "node_type": "4", "metadata": {"page_label": "22", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "4c9205ecfe25b8eea7ac56ee7101068a63104fc7d12fe8f874a03d0c0a11339d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fff6adb4-c14c-4503-986a-d536277e7948", "node_type": "1", "metadata": {"page_label": "21", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "fa4027eda91846af37c03c1b7da97962b3ec940e494edfb003254dcf40de000b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "943e6f85-8063-4188-b93c-833b3d5d0d9f", "node_type": "1", "metadata": {}, "hash": "5940ac453a47696b9467a8044c1317df3f11fc00dc4083b17ff3f36f8adb9dc3", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n11 \n \nclass const  continue  default  \ndo double  else enum  \nextends  final finally  float \nfor goto if implements  \nimport  instanceof  int interface  \nlong native  new package  \nprivate  protected  public  return  \nshort static  strictfp  super  \nswitch  synchronized  this throw  \nthrows  transient  try void \nvolatile  while   \nComments in Java  \nJava supports single -line and multi -line comments very similar to C and C++. All \ncharacters available inside any comment are ignored by Java compiler.  \npublic class MyFirstJavaProgram { \n \n   /* This is my first java program.  \n    * This will print 'Hello World' as the output  \n    * This is an example of multi -line comments.  \n    */ \n \n    public static void main(String []args){ \n       // This is an example of single line comment  \n       /* This is also an example of single line comment. */  \n       System.out.println(\"Hello World\" );  \n    } \n}", "start_char_idx": 0, "end_char_idx": 921, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "943e6f85-8063-4188-b93c-833b3d5d0d9f": {"__data__": {"id_": "943e6f85-8063-4188-b93c-833b3d5d0d9f", "embedding": null, "metadata": {"page_label": "23", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1e3cf0ec-9010-4ac8-8215-2ea1ca935afe", "node_type": "4", "metadata": {"page_label": "23", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "91e0d84dde280f351107b6dac18269ed708f8865a0254d64af3923c93786e509", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a1a92b2-cd39-4590-bfa5-71447b1e48e8", "node_type": "1", "metadata": {"page_label": "22", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "6fdb8f11680125a0ca29a106839f73bba2c0f862590e58a53dcb3eb41a2e5f9c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d7884f2c-3805-487b-b2a8-4eb07f36d5ac", "node_type": "1", "metadata": {}, "hash": "64156a2e96672a9834631697aae5d487797ae5ab0155c4760f0fcb831f5a4c19", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n12 \n \nUsing Blank Lines  \nA line containing only white  space, possibly with a comment, is known as a blank line, and \nJava totally ignores it.  \nInheritance  \nIn Java, classes can be derived from classes. Basically , if you need to create a new class \nand here is already a class that has some of the code you require , then it is possible to \nderive your new class from the already existing code.  \nThis concept allows you to reuse the fields and methods of the existing class without having \nto rewrite the code in a new class. In this scenario , the existing class is called t he \nsuperclass  and the derived class is called the subclass . \nInterfaces  \nIn Java language, an interface can be defined as a contract between objects on how to \ncommunicate with each other. Interfaces play a vital role when it comes to the concept of \ninheritance.  \nAn interface defines the methods, a deriving class  (subclass) should use. But the \nimplementation of the methods is totally up to the subclass.  \nWhat is Next?  \nThe next section explains about Objects and classes in Java programming. At the end of  \nthe session , you will be able to get a clear picture as to what are objects and what are \nclasses in Java.", "start_char_idx": 0, "end_char_idx": 1218, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d7884f2c-3805-487b-b2a8-4eb07f36d5ac": {"__data__": {"id_": "d7884f2c-3805-487b-b2a8-4eb07f36d5ac", "embedding": null, "metadata": {"page_label": "24", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java", "Object -Oriented Language"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "49096251-4347-4a07-8c0e-c2c18be9a9d5", "node_type": "4", "metadata": {"page_label": "24", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "d83c2aa6294bc89ee4ba0ef626e7d0bf651efb0e49c9c34a9c372214151d8580", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "943e6f85-8063-4188-b93c-833b3d5d0d9f", "node_type": "1", "metadata": {"page_label": "23", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "d66c019902810d2433cec93d41731dfa359558eeaac001f01e0365f196ec8ecb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c81042f5-18ab-4350-9aa4-29f762f8bea5", "node_type": "1", "metadata": {}, "hash": "81a33dce03ad67b651c67998cdf96e60abe0308de569e8f43243be05a9b7cdfa", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n13 \n \nJava is an Object -Oriented Language. As a language that has the Object -Oriented feature, \nJava supports the following fun damental concepts:  \n\uf0b7 Polymorphism  \n\uf0b7 Inheritance  \n\uf0b7 Encapsulation  \n\uf0b7 Abstraction  \n\uf0b7 Classes  \n\uf0b7 Objects  \n\uf0b7 Instance  \n\uf0b7 Method  \n\uf0b7 Message Parsing  \nIn this chapter, we will look into the concepts - Classes and Objects.  \n\uf0b7 Object - Objects have states and behaviors. Example: A dog has states - color, \nname, breed as well as behaviors \u2013 wagging  the tail , barking, eating. An object is \nan instance of a class.  \n\uf0b7 Class - A class can be defined as a template/blue print that describes the \nbehavior /state  that the object of its type support.  \nObjects in Java  \nLet us now look deep into what are objects. If we consider the real -world , we can find \nmany objects around us, cars, dogs, humans, etc. All these objects have a state and a \nbehavior.  \nIf we consider a dog, then its state is - name, breed, color, and the behavior is - barking, \nwagging  the tail , running . \nIf you compare the software object with a real -world object, they have very similar \ncharacteristics.  \nSoftware objects also have a state and a behavior. A software object's state is stored in \nfields and behavior is shown via methods.  \nSo in software development, methods operate on the internal state of an object and the \nobject -to-object communication is don e via methods.  \n \n \n 4.   Java \u2013 Objects & Classes", "start_char_idx": 0, "end_char_idx": 1445, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c81042f5-18ab-4350-9aa4-29f762f8bea5": {"__data__": {"id_": "c81042f5-18ab-4350-9aa4-29f762f8bea5", "embedding": null, "metadata": {"page_label": "25", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a99e741-7857-4287-a5dc-54552c2f8ba8", "node_type": "4", "metadata": {"page_label": "25", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "8bfcb8f92a7763a971a0ba718585e4c36b226a773f0d55f60175bc9e3f9f218c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7884f2c-3805-487b-b2a8-4eb07f36d5ac", "node_type": "1", "metadata": {"page_label": "24", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "3656a0f522c8a494399f93257aa4e5d8ac3ef5267f6ce85a6d6e9283ae9cf0ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6432970e-16a9-40f2-bb74-3499a715c987", "node_type": "1", "metadata": {}, "hash": "be37ff7e50c9b7744298bda453a70eadb82f64b89a86dd5fdfdd9dacc87a0a9b", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n14 \n \nClasses in Java  \nA class is a blue print from which individual objects are created.  \nFollowing is a sample of a class . \npublic class Dog{ \n   String breed; \n   int ageC \n   String color; \n \n   void barking(){ \n   } \n    \n   void hungry(){ \n   } \n    \n   void sleeping (){ \n   } \n} \nA class can contain any of the following variable types.  \n\uf0b7 Local variables:  Variables defined inside methods, constructors or blocks are \ncalled local variables. The variable will be declared and initialized with in the \nmethod and the variable will be destroyed when the method has completed.  \n\uf0b7 Instance variables:  Instance variables are variables within a class but outside \nany method. These variables are initialized when the class is instantiated. Instance \nvariables c an be accessed from inside any method, constructor or blocks of that \nparticular class.  \n\uf0b7 Class variables:  Class variables are variables declared with in a class, outside any \nmethod, with the static keyword.  \nA class can have any number of methods to access th e value of various kinds of methods. \nIn the above example, barking(), hungry() and sleeping() are methods.  \nFollowing are some of the important topics that need to be discussed when looking into \nclasses of the Java Language.  \nConstructors  \nWhen discussing about classes, one of the most important sub topic would be constructors. \nEvery class has a constructor. If we do not explicitly write a constructor for a class , the \nJava compiler builds a default constructor for that class.", "start_char_idx": 0, "end_char_idx": 1534, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6432970e-16a9-40f2-bb74-3499a715c987": {"__data__": {"id_": "6432970e-16a9-40f2-bb74-3499a715c987", "embedding": null, "metadata": {"page_label": "26", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Singleton Classes"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "89839d86-f31c-4464-957d-9ccc52424690", "node_type": "4", "metadata": {"page_label": "26", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "958a0d0a872cdcbebf29ec3c2dbd233dc94785b00c4ae6309d79b64d4ea7a76b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c81042f5-18ab-4350-9aa4-29f762f8bea5", "node_type": "1", "metadata": {"page_label": "25", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "58af861b9fec1ce4b9b05e81264ae70d155715423fa5acfb94130f418039411d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ee4eb8b3-19c2-47e1-845d-bc76851428af", "node_type": "1", "metadata": {}, "hash": "67404b4c5b7960d7348e06ef2d8a8cac144c730474c9d25495d53706e67cf290", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n15 \n \nEach time a new  object is created, at least one constructor will be invoked. The main rule \nof constructors is that they should have the same name as the class. A class can have \nmore than one constructor.  \nFollowing is an e xample of a constructor : \npublic class Puppy{ \n   public Puppy(){ \n   } \n \n   public Puppy(String name){ \n      // This constructor has one parameter, name.  \n   } \n} \nJava also supports  Singleton Classes  where you would be  able to create only one instance \nof a class.  \nNote:  We have two different types of constructors . We are going to discuss constructors \nin detail in the subsequent chapters.  \nHow to Use Singleton Class ? \nThe Singleton's purpose is to control object creation, limiting the number of objects to only \none. Since there is only one Singleton instance, any instance fields of a Singleton will occur \nonly once per class, just like static fields. Singletons often control access to resources , \nsuch as  database connections or sockets.  \nFor example, if you have a license for only one connection for your database or your JDBC \ndriver has trouble with multithreading, the Singleton makes sure that only one connection \nis made or that only one thread can access  the connection at a time.", "start_char_idx": 0, "end_char_idx": 1258, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ee4eb8b3-19c2-47e1-845d-bc76851428af": {"__data__": {"id_": "ee4eb8b3-19c2-47e1-845d-bc76851428af", "embedding": null, "metadata": {"page_label": "27", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aca0232f-b5d8-4b35-aea8-4a3d5f76bbb6", "node_type": "4", "metadata": {"page_label": "27", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "3c1f9838643a733e7f7c31a451408dfb35ec6f67eef63d5e4c3de99da62a45e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6432970e-16a9-40f2-bb74-3499a715c987", "node_type": "1", "metadata": {"page_label": "26", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "b8bad0ded88091934a7186bc4a883127959133315f5ab01d574ab18c9373bc2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d37e797b-6203-428d-96e8-504953d07353", "node_type": "1", "metadata": {}, "hash": "e9faca04d93b15741efb54413733d067448400aaac703762f7e2bb4976e9cf4b", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n16 \n \nImplementing Singletons  \nExample 1  \nThe easiest implementation consists of a private constructor and a field to hold its result, \nand a static accessor method with a name like getInstance().  \nThe private field can be assigned  from within a static initializer block or, more simply, \nusing an initializer. The getInstance( ) method (which must be public) then simply returns \nthis instance \u2212  \n// File Name: Singleton.java  \npublic class Singleton  { \n \n   private static Singleton  singleton = new Singleton ( ); \n    \n \n   /* A private Constructor prevents any other  \n    * class from instantiating.  \n    */ \n   private Singleton (){ } \n    \n   /* Static 'instance' method */  \n   public static Singleton  getInstance ( ) { \n      return singleton ; \n   } \n   /* Other methods protected by singleton -ness */ \n   protected  static void demoMethod ( ) { \n      System.out.println(\"demoMethod for singleton\" );  \n   } \n} \nHere is the main program file , where we will create a singleton object:  \n// File Name: SingletonDemo.java  \npublic class SingletonDemo  { \n   public static void main(String[] args) { \n      Singleton  tmp = Singleton .getInstance ( ); \n      tmp.demoMethod ( ); \n   } \n}", "start_char_idx": 0, "end_char_idx": 1213, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d37e797b-6203-428d-96e8-504953d07353": {"__data__": {"id_": "d37e797b-6203-428d-96e8-504953d07353", "embedding": null, "metadata": {"page_label": "28", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java 17"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "818fd420-9748-4cc0-9af8-c43ef88166e2", "node_type": "4", "metadata": {"page_label": "28", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "96f1e2f48ca2682e45da95a38b270c0bc1412e6066e66f7e71699f401c55fdaa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ee4eb8b3-19c2-47e1-845d-bc76851428af", "node_type": "1", "metadata": {"page_label": "27", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "75a5dec2ed7c222577e2d907d87cb03f2cf000b9f2a711b1698e38271b084217", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8033b2d8-1373-4ba9-a056-e48ead3fa0ff", "node_type": "1", "metadata": {}, "hash": "e584941a0aa66156a5ef251e37e8aa1cb0ec7fa5ccd9f97d2f9e10948118d8d0", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n17 \n \nThis w ill produce the following result \u2212  \ndemoMethod for singleton  \n \nExample 2  \nFollowing implementation shows a classic Singleton design pattern:  \npublic class ClassicSingleton  { \n \n   private static ClassicSingleton  instance = null; \n   private ClassicSingleton () { \n      // Exists only to defeat instantiation.  \n   } \n   public static ClassicSingleton  getInstance () { \n      if(instance == null) { \n         instance = new ClassicSingleton (); \n      } \n      return instance ; \n   } } \nThe ClassicSingleton class maintains a static reference to the lone singleton instance and \nreturns that reference from the static getInstance() method.  \nHere, ClassicSingleton class employs a technique known as lazy instantiation to create the \nsingleton; as a result, the singleton instance is not created until the getInstance() method \nis called for the first time. This  technique ensures that singleton instances are created only \nwhen needed.  \nCreating an Object  \nAs mentioned previously, a class provides the blueprints for objects. So basically , an object \nis created from a class. In Java, the new key word is used to create  new objects.  \nThere are three steps when creating an object from a class:  \n\uf0b7 Declaration:  A variable declaration with a variable name with an object type.  \n\uf0b7 Instantiation:  The 'new' key word is used to create the object.  \n\uf0b7 Initialization:  The 'new' keyword is followed by a call to a constructor. This call \ninitializes the new object.", "start_char_idx": 0, "end_char_idx": 1501, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8033b2d8-1373-4ba9-a056-e48ead3fa0ff": {"__data__": {"id_": "8033b2d8-1373-4ba9-a056-e48ead3fa0ff", "embedding": null, "metadata": {"page_label": "29", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "40e7f642-2560-43c0-92e7-84041c57df3b", "node_type": "4", "metadata": {"page_label": "29", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "7f1ecf1316a1cd76dcd1c4d07a0f8f16a67008702c3f36df6715c2ebc50d1c81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d37e797b-6203-428d-96e8-504953d07353", "node_type": "1", "metadata": {"page_label": "28", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "a20ee294d73eda454d0ea4219af2b3da71461f982293861ed58da7e1b919a745", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82dcde14-4885-409d-9911-a2b1811d611d", "node_type": "1", "metadata": {}, "hash": "4d0e2a4bca937174809030cb853d3f1e361feb4b7cf8e04ec0edd8ad0de5fc6b", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n18 \n \nFollowing is an e xample of creating an object : \npublic class Puppy{ \n \n   public Puppy(String name){ \n      // This constructor has one parameter, name.  \n      System.out.println(\"Passed Name is :\"  + name );  \n   } \n    \n   public static void main(String []args){ \n      // Following statement would create an object myPuppy  \n      Puppy myPuppy = new Puppy( \"tommy\" ); \n   } \n} \nIf we compile and run the above program, then it w ill produce the following result:  \nPassed Name is :tommy \nAccessing  Instance Variables and Methods  \nInstance variables and methods are accessed via created objects. To access an instance \nvariable , following is the fully qualified path : \n/* First create an object */  \nObjectReference  = new Constructor (); \n \n/* Now call a variable as follows */  \nObjectReference .variableName ; \n \n/* Now you can call a class method as follows */  \nObjectReference .MethodName ();", "start_char_idx": 0, "end_char_idx": 922, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82dcde14-4885-409d-9911-a2b1811d611d": {"__data__": {"id_": "82dcde14-4885-409d-9911-a2b1811d611d", "embedding": null, "metadata": {"page_label": "30", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39b9cee6-0a27-41ac-81af-d7375d9d1800", "node_type": "4", "metadata": {"page_label": "30", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "70e91bd15064f33b1cba3fd4dea08f21e904d820bcb186bcb4519d1d22ea044b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8033b2d8-1373-4ba9-a056-e48ead3fa0ff", "node_type": "1", "metadata": {"page_label": "29", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "6610d855c395cee83eeb5c964981fa1d0f206af4d365cef45c7c3bb9f319a798", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc1051ae-eb63-4328-8fcf-620ec2d940c9", "node_type": "1", "metadata": {}, "hash": "54e568c0251b4270bd37670953987c9c149f8bf71d1c9cc304a53010fba76b53", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n19 \n \nExample  \nThis example explains how to access instance variables and methods of a class . \npublic class Puppy{ \n    \n   int puppyAge ; \n \n   public Puppy(String name){ \n      // This constructor has one parameter, name.  \n      System.out.println(\"Name chosen is :\"  + name );  \n   } \n    \n   public void setAge( int age ){ \n       puppyAge = age; \n   } \n \n   public int getAge( ){ \n       System.out.println(\"Puppy's age is :\"  + puppyAge );  \n       return puppyAge ; \n   } \n    \n   public static void main(String []args){ \n      /* Object creation */  \n      Puppy myPuppy = new Puppy( \"tommy\" ); \n \n      /* Call class method to set puppy's age */  \n      myPuppy.setAge( 2 ); \n \n      /* Call another class method to get puppy's age */  \n      myPuppy.getAge( ); \n \n      /* You can access instance variable as follows as well */ \n      System.out.println(\"Variable Value :\"  + myPuppy.puppyAge );  \n   } \n}", "start_char_idx": 0, "end_char_idx": 926, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fc1051ae-eb63-4328-8fcf-620ec2d940c9": {"__data__": {"id_": "fc1051ae-eb63-4328-8fcf-620ec2d940c9", "embedding": null, "metadata": {"page_label": "31", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b589efc6-1a75-46e3-9259-1dcce2111ee2", "node_type": "4", "metadata": {"page_label": "31", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "1f0444728e25bad49139e0cf609bb8ee1427ac53c7364455bbed386db6dc1f7c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82dcde14-4885-409d-9911-a2b1811d611d", "node_type": "1", "metadata": {"page_label": "30", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "bf158f80e4721f8ea4d0a43983aedc667b0ca9be1e41c813d725add7290d6ace", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c908ed3-c69d-4eb3-afab-ad1366faeaaf", "node_type": "1", "metadata": {}, "hash": "be03196451bca0d067ab1c36779dea9998be6bfe854f9fa77b7fc0b0cb984277", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n20 \n \nIf we compile and run the above program, then it will produce the following result:  \nName chosen is :tommy \nPuppy's age is :2  \nVariable Value :2  \nSource File Declaration Rules \nAs the last part of this section , let's now look into the source file declaration rules. These \nrules are essential when declaring classes,  import  statements and  package  statements in \na source file.  \n\uf0b7 There can be only one public class per source file.  \n \n\uf0b7 A source file can have multiple non -public classes.  \n \n\uf0b7 The public class name should be the name of the source file as well which should \nbe appended by  .java at the end. For example: the class name is  public class \nEmployee{}  then the source file should be as Employee.java.  \n \n\uf0b7 If the class is defined inside a package, then the package statement should be the \nfirst statement in the source file.  \n \n\uf0b7 If import statements are present , then they must be written between the package \nstatement and the class declaration.  If there are no package statements , then the \nimport statement should be the first line in the source file.  \n \n\uf0b7 Import and package statements will imply to all the classes present in the source \nfile. It is not possible to declare different import and/or packa ge statements to \ndifferent classes in the source file.  \nClasses have several access levels and there are different types of classes; abstract \nclasses, final classes, etc. We will be explaining about all these in the access modifiers \nchapter.  \nApart from the  above mentioned types of classes, Java also has some special classes called \nInner classes and Anonymous classes.", "start_char_idx": 0, "end_char_idx": 1636, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c908ed3-c69d-4eb3-afab-ad1366faeaaf": {"__data__": {"id_": "2c908ed3-c69d-4eb3-afab-ad1366faeaaf", "embedding": null, "metadata": {"page_label": "32", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1b46d21b-1d48-49f3-80bd-511e41bda2c4", "node_type": "4", "metadata": {"page_label": "32", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "3e140e76c8c1ecc59d089407a7f242305c6b2002c385805d5025ae97db8e4520", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc1051ae-eb63-4328-8fcf-620ec2d940c9", "node_type": "1", "metadata": {"page_label": "31", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}, "hash": "66117356d2344ad970041ea684c9a639ee75eb567d3e0a752de3aecb70eb12f1", "class_name": "RelatedNodeInfo"}}, "text": "Java \n \n21 \n \nEnd of ebook preview  \nIf you liked what you saw\u2026  \nBuy it from our store @ https://store.tutorialspoint.com", "start_char_idx": 0, "end_char_idx": 122, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"3b35e093-7506-4831-9d88-049ca4e712a9": {"doc_hash": "8e7c3870edaa75765f6a222e87fd5d3c3f7941ab5b9aacb36705fa6c16c31e1f", "ref_doc_id": "62f2e1b2-eaf9-4d34-b928-d3b3e39eb4f3"}, "3971c3e3-7bc8-4348-b387-97ab15c6a8b1": {"doc_hash": "a4d741689bad1e5af82540e57dc9874cf78de616462dda3c7072aed3fcd4f4d3", "ref_doc_id": "58f6dcce-60e3-4de1-b5fd-59df24dce01f"}, "5e31b476-e0da-4565-98e5-8dc5bb3eef78": {"doc_hash": "5bf66e068207562cac20174900e5fb8530d7d718617713db216ff256638af4db", "ref_doc_id": "d561d29f-c79d-43f9-b3c2-0166c281ba16"}, "fe50c00d-fead-442d-93ca-74fef0a5154e": {"doc_hash": "b9f4f3e2270b9cb383b48abe8a40255c871df0a402c21336cd4a87e4965b5f6e", "ref_doc_id": "773a8995-f7dd-4d4a-b786-fd53792158fb"}, "2cbb124b-d339-485e-9537-fc1f61a9ace0": {"doc_hash": "f8f55e5cfcb64638b7bb3fe463abddc68490b4bf12a2da2076ad22c77566680f", "ref_doc_id": "43f1af2e-1a70-4b14-9289-4f08365d06e5"}, "d3bc76e9-6b41-40fd-9bad-db965005b041": {"doc_hash": "384e1e380c194efd3f3512acb5bd4f3bfe9d660870aab479beb01550eabda718", "ref_doc_id": "96602aeb-7d12-4de0-8f57-686e0c9b9d39"}, "6116c89f-052d-431f-9d14-cf114c79aeff": {"doc_hash": "5f8c7806c645177400f5b3a5f8ac9acbfcc39eb1d11ff68c6082e1a20400e376", "ref_doc_id": "781541c0-2d61-4162-8a59-b3457c1b0e2b"}, "b4fa3b8c-d4bc-4ef9-b49a-77fb22c9f0f9": {"doc_hash": "c0c98daf6d463e4d140d74c258dca485e17d0c92a7e98508363c748d8fae8694", "ref_doc_id": "2fa9df47-4ea6-49bb-a9b8-e7be5339063c"}, "77bf1d89-c015-42be-9e31-c0e57ff6079c": {"doc_hash": "d27cc2d01d2a458f0ea3e959bf6fed6fe7fad918e8294437a8a9d883a5b9099e", "ref_doc_id": "918544ce-753e-438e-9e68-7f25175a4a99"}, "98a47030-c049-422a-8c06-a4b2ffdc2678": {"doc_hash": "6296d3a650ba084ea662ebb59ab6852832e009c5f9054c6a367b1e45e404ba91", "ref_doc_id": "b1f6c6f4-754a-4f1c-9549-eb88cf58dcc8"}, "b40c40e6-7e9c-477a-9113-62424bb6cdf0": {"doc_hash": "2c4ac55a804db4e3776208f89022aec3c0f7f165b0a8867b8ad31e869a990460", "ref_doc_id": "ac0f4129-3cec-4c7c-a9bc-6480d9bdcea0"}, "79d65bb7-4889-4081-8162-ce80c2dfdaff": {"doc_hash": "e7b01c0d836e46900ec2b5fa6dcb77569193ff8253dc8f7c90ef7f3e9720398f", "ref_doc_id": "5feedd47-52d1-4133-af65-c2c1810dc912"}, "d97649ce-5fac-4a45-89ba-aa4554be5406": {"doc_hash": "9f30b7b8031a1d65e37c0c43ea3c4f91d78d7c41539b176bbdf7c0b6a0f7631c", "ref_doc_id": "5a316916-6da1-485c-b7de-9caf67f622ad"}, "11041b0e-0ae7-4c96-9478-1766adfc40e6": {"doc_hash": "eff0b7ad43347fb0ef186341ba726ed8ee949bc22373c74ec5cedb9e953a812e", "ref_doc_id": "5d7c0f4a-ce98-49a0-8823-b541cb349ab4"}, "bcaa2efa-c4e4-43b8-bd6e-fb51523079e7": {"doc_hash": "1580007ac8a8b8984a9e6afe35e6b8d46eaa52addd2c1d3c3eb640ff8c6e8b44", "ref_doc_id": "f57a6795-5c23-489c-88dd-2e91fe69ca45"}, "a2736b32-079b-48ed-b32f-eee99bae3cea": {"doc_hash": "4a2d6d68dec14a37ea8a760fd897bb1f1843983f983abac4e5bb882265a50a1e", "ref_doc_id": "9a369623-bd19-4833-9261-634d1e656113"}, "37a84805-3bc9-42c9-b762-371e42be5439": {"doc_hash": "d0ab8fe2187fb3d5b052c30a614c3fe080ab0d8f804002efe53446284b98dc01", "ref_doc_id": "7079b63e-88ae-44d1-9990-06b581d35cf2"}, "6bff1c15-1c1e-4ec5-8d3e-181cdc5c2344": {"doc_hash": "aba2d313900eff5f39fa3f2ad3c25ffb1ea8817bbcfca0ed7f7f9692afb3ce51", "ref_doc_id": "a00125db-7485-4d11-a988-bb4af10e1946"}, "96001b07-4a73-4238-b160-ac18db4b9e25": {"doc_hash": "8dfce39b3d1cf4dd87e7133875d0b4ff01309820d8dfbb67a08dce9867d364df", "ref_doc_id": "0e925fb3-c80b-4450-98a4-a84ad93d7c6a"}, "fff6adb4-c14c-4503-986a-d536277e7948": {"doc_hash": "45bb103df36d50843a9a6a2139b2a87136f43c3680c899a7d2247c7c4534d306", "ref_doc_id": "1175ff1a-8811-43d2-8cba-f596b33505a2"}, "6a1a92b2-cd39-4590-bfa5-71447b1e48e8": {"doc_hash": "dd1fdbc531983d16c7f3ce99039bfcf2a62fc685fd35822ee5fa26bafe39ecfe", "ref_doc_id": "1bd3b4cb-dbd2-4667-adc8-a07782409db7"}, "943e6f85-8063-4188-b93c-833b3d5d0d9f": {"doc_hash": "0752d0c7496cf0a170bea360cd1542af5b539006f58f32de45269b89f67bb5d2", "ref_doc_id": "1e3cf0ec-9010-4ac8-8215-2ea1ca935afe"}, "d7884f2c-3805-487b-b2a8-4eb07f36d5ac": {"doc_hash": "699efbe28ecf723693592656ab84f4a20e3228875aedd0693343a1317ebf27b8", "ref_doc_id": "49096251-4347-4a07-8c0e-c2c18be9a9d5"}, "c81042f5-18ab-4350-9aa4-29f762f8bea5": {"doc_hash": "58af861b9fec1ce4b9b05e81264ae70d155715423fa5acfb94130f418039411d", "ref_doc_id": "8a99e741-7857-4287-a5dc-54552c2f8ba8"}, "6432970e-16a9-40f2-bb74-3499a715c987": {"doc_hash": "33fca64ce2ca8a01fd0b5c03c758c5a60396ca12e497e01e69f687732fed5c7d", "ref_doc_id": "89839d86-f31c-4464-957d-9ccc52424690"}, "ee4eb8b3-19c2-47e1-845d-bc76851428af": {"doc_hash": "75a5dec2ed7c222577e2d907d87cb03f2cf000b9f2a711b1698e38271b084217", "ref_doc_id": "aca0232f-b5d8-4b35-aea8-4a3d5f76bbb6"}, "d37e797b-6203-428d-96e8-504953d07353": {"doc_hash": "ac3c15667b29cf978ccac9f29bf8eb55eee6a90452f052e629f0ac8983ab83a1", "ref_doc_id": "818fd420-9748-4cc0-9af8-c43ef88166e2"}, "8033b2d8-1373-4ba9-a056-e48ead3fa0ff": {"doc_hash": "6610d855c395cee83eeb5c964981fa1d0f206af4d365cef45c7c3bb9f319a798", "ref_doc_id": "40e7f642-2560-43c0-92e7-84041c57df3b"}, "82dcde14-4885-409d-9911-a2b1811d611d": {"doc_hash": "bf158f80e4721f8ea4d0a43983aedc667b0ca9be1e41c813d725add7290d6ace", "ref_doc_id": "39b9cee6-0a27-41ac-81af-d7375d9d1800"}, "fc1051ae-eb63-4328-8fcf-620ec2d940c9": {"doc_hash": "66117356d2344ad970041ea684c9a639ee75eb567d3e0a752de3aecb70eb12f1", "ref_doc_id": "b589efc6-1a75-46e3-9259-1dcce2111ee2"}, "2c908ed3-c69d-4eb3-afab-ad1366faeaaf": {"doc_hash": "02f32ff51c8375b5ca107a30e25cae2b3e850375dbb35b88e9d689a34eb3bd7a", "ref_doc_id": "1b46d21b-1d48-49f3-80bd-511e41bda2c4"}}, "docstore/ref_doc_info": {"62f2e1b2-eaf9-4d34-b928-d3b3e39eb4f3": {"node_ids": ["3b35e093-7506-4831-9d88-049ca4e712a9"], "metadata": {"page_label": "2", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java", "Java Programming language", "Java Online", "Windows", "Sun Microsystems", "Mac OS"]}}, "58f6dcce-60e3-4de1-b5fd-59df24dce01f": {"node_ids": ["3971c3e3-7bc8-4348-b387-97ab15c6a8b1"], "metadata": {"page_label": "3", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}}, "d561d29f-c79d-43f9-b3c2-0166c281ba16": {"node_ids": ["5e31b476-e0da-4565-98e5-8dc5bb3eef78"], "metadata": {"page_label": "4", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java"]}}, "773a8995-f7dd-4d4a-b786-fd53792158fb": {"node_ids": ["fe50c00d-fead-442d-93ca-74fef0a5154e"], "metadata": {"page_label": "5", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}}, "43f1af2e-1a70-4b14-9289-4f08365d06e5": {"node_ids": ["2cbb124b-d339-485e-9537-fc1f61a9ace0"], "metadata": {"page_label": "6", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java v Java"]}}, "96602aeb-7d12-4de0-8f57-686e0c9b9d39": {"node_ids": ["d3bc76e9-6b41-40fd-9bad-db965005b041"], "metadata": {"page_label": "7", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}}, "781541c0-2d61-4162-8a59-b3457c1b0e2b": {"node_ids": ["6116c89f-052d-431f-9d14-cf114c79aeff"], "metadata": {"page_label": "8", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}}, "2fa9df47-4ea6-49bb-a9b8-e7be5339063c": {"node_ids": ["b4fa3b8c-d4bc-4ef9-b49a-77fb22c9f0f9"], "metadata": {"page_label": "9", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java"]}}, "918544ce-753e-438e-9e68-7f25175a4a99": {"node_ids": ["77bf1d89-c015-42be-9e31-c0e57ff6079c"], "metadata": {"page_label": "10", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}}, "b1f6c6f4-754a-4f1c-9549-eb88cf58dcc8": {"node_ids": ["98a47030-c049-422a-8c06-a4b2ffdc2678"], "metadata": {"page_label": "11", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}}, "ac0f4129-3cec-4c7c-a9bc-6480d9bdcea0": {"node_ids": ["b40c40e6-7e9c-477a-9113-62424bb6cdf0"], "metadata": {"page_label": "12", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java \u2013 Basics"]}}, "5feedd47-52d1-4133-af65-c2c1810dc912": {"node_ids": ["79d65bb7-4889-4081-8162-ce80c2dfdaff"], "metadata": {"page_label": "13", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java", "Java Standard Edition", "Object Oriented", "C", "Java ME", "Java EE", "James Gosling", "Sun Microsystems", "Java SE", "Java 2 Java", "Java SE 8"]}}, "5a316916-6da1-485c-b7de-9caf67f622ad": {"node_ids": ["d97649ce-5fac-4a45-89ba-aa4554be5406"], "metadata": {"page_label": "14", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["James Gosling", "Java", "C++"]}}, "5d7c0f4a-ce98-49a0-8823-b541cb349ab4": {"node_ids": ["11041b0e-0ae7-4c96-9478-1766adfc40e6"], "metadata": {"page_label": "15", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Hello World", "Java 4 Try It Option"]}}, "f57a6795-5c23-489c-88dd-2e91fe69ca45": {"node_ids": ["bcaa2efa-c4e4-43b8-bd6e-fb51523079e7"], "metadata": {"page_label": "16", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java"]}}, "9a369623-bd19-4833-9261-634d1e656113": {"node_ids": ["a2736b32-079b-48ed-b32f-eee99bae3cea"], "metadata": {"page_label": "17", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Solaris", "Java", "UNIX"]}}, "7079b63e-88ae-44d1-9990-06b581d35cf2": {"node_ids": ["37a84805-3bc9-42c9-b762-371e42be5439"], "metadata": {"page_label": "18", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java"]}}, "a00125db-7485-4d11-a988-bb4af10e1946": {"node_ids": ["6bff1c15-1c1e-4ec5-8d3e-181cdc5c2344"], "metadata": {"page_label": "19", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Hello World Basic Syntax About Java", "H ello World"]}}, "0e925fb3-c80b-4450-98a4-a84ad93d7c6a": {"node_ids": ["96001b07-4a73-4238-b160-ac18db4b9e25"], "metadata": {"page_label": "20", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java 9 Java Identifiers", "Java", "Java Modifiers"]}}, "1175ff1a-8811-43d2-8cba-f596b33505a2": {"node_ids": ["fff6adb4-c14c-4503-986a-d536277e7948"], "metadata": {"page_label": "21", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java"]}}, "1bd3b4cb-dbd2-4667-adc8-a07782409db7": {"node_ids": ["6a1a92b2-cd39-4590-bfa5-71447b1e48e8"], "metadata": {"page_label": "22", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java", "Java Java", "MyFirstJavaProgram", "C", "C++"]}}, "1e3cf0ec-9010-4ac8-8215-2ea1ca935afe": {"node_ids": ["943e6f85-8063-4188-b93c-833b3d5d0d9f"], "metadata": {"page_label": "23", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java"]}}, "49096251-4347-4a07-8c0e-c2c18be9a9d5": {"node_ids": ["d7884f2c-3805-487b-b2a8-4eb07f36d5ac"], "metadata": {"page_label": "24", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java", "Object -Oriented Language"]}}, "8a99e741-7857-4287-a5dc-54552c2f8ba8": {"node_ids": ["c81042f5-18ab-4350-9aa4-29f762f8bea5"], "metadata": {"page_label": "25", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}}, "89839d86-f31c-4464-957d-9ccc52424690": {"node_ids": ["6432970e-16a9-40f2-bb74-3499a715c987"], "metadata": {"page_label": "26", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Singleton Classes"]}}, "aca0232f-b5d8-4b35-aea8-4a3d5f76bbb6": {"node_ids": ["ee4eb8b3-19c2-47e1-845d-bc76851428af"], "metadata": {"page_label": "27", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}}, "818fd420-9748-4cc0-9af8-c43ef88166e2": {"node_ids": ["d37e797b-6203-428d-96e8-504953d07353"], "metadata": {"page_label": "28", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16", "entities": ["Java 17"]}}, "40e7f642-2560-43c0-92e7-84041c57df3b": {"node_ids": ["8033b2d8-1373-4ba9-a056-e48ead3fa0ff"], "metadata": {"page_label": "29", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}}, "39b9cee6-0a27-41ac-81af-d7375d9d1800": {"node_ids": ["82dcde14-4885-409d-9911-a2b1811d611d"], "metadata": {"page_label": "30", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}}, "b589efc6-1a75-46e3-9259-1dcce2111ee2": {"node_ids": ["fc1051ae-eb63-4328-8fcf-620ec2d940c9"], "metadata": {"page_label": "31", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}}, "1b46d21b-1d48-49f3-80bd-511e41bda2c4": {"node_ids": ["2c908ed3-c69d-4eb3-afab-ad1366faeaaf"], "metadata": {"page_label": "32", "file_name": "/home/ubuntu/Java/java_tutorial.pdf", "file_path": "/home/ubuntu/Java/java_tutorial.pdf", "file_type": "application/pdf", "file_size": 1089150, "creation_date": "2024-03-16", "last_modified_date": "2024-03-16"}}}}